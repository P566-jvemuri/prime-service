name: Docker Image CI for GHCR

on:
  push

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    services:
      postgres_db:
        image: postgres
        env:
          POSTGRES_USER: admin2025
          POSTGRES_PASSWORD: p5662025!
          POSTGRES_DB: primes
        ports:
          - 5001:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      VERSION: ${{ secrets.SERVICE_VERSION }}
      CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
      CONTAINER_REGISTRY_UN: ${{ secrets.CONTAINER_REGISTRY_UN }}
      CONTAINER_REGISTRY_PW: ${{ secrets.CONTAINER_REGISTRY_PW }}
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      DATASOURCE_UN: ${{ secrets.SPRING_DATASOURCE_UN }}
      DATASOURCE_PW: ${{ secrets.SPRING_DATASOURCE_PW }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Ensure Maven is installed
        run: |
          mvn -v
          mvn --batch-mode -DskipTests clean package
        if: ${{ !steps.check_mvnw.outputs.found }}

      - name: Check for Maven wrapper
        id: check_mvnw
        run: echo "::set-output name=found::$(test -f './mvnw' && echo 'true' || echo 'false')"

      - name: Build the package using Maven wrapper
        run: ./mvnw --batch-mode -DskipTests clean package
        if: ${{ steps.check_mvnw.outputs.found == 'true' }}

      - name: Run unit tests
        run: ./mvnw --batch-mode -Dmaven.test.failure.ignore=true test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5001/primes
          SPRING_DATASOURCE_USERNAME: admin2025
          SPRING_DATASOURCE_PASSWORD: p5662025!

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true
          fail-on-empty: true

      - name: Build the Docker image
        run: ./scripts/build-image.sh

      - name: Publish Docker image to GHCR
        run: ./scripts/push-to-ghcr.sh

      - name: Publish Docker image to Azure Container Registry
        run: ./scripts/push-to-acr.sh

      - name: Set up kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: ./scripts/deploy.sh

# Alternative commented-out steps:

#      - name: Checkout
#        uses: actions/checkout@v1
#
#      - name: Set up JDK 1.17
#        uses: actions/setup-java@v2
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Build the package
#        run: mvn --batch-mode -DskipTests package
#
#      - name: Run the unit tests
#        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test
#
#      - name: Build and push the image
#        run: |
#          docker login --username jahnavi-vemuri --password ${{ secrets.ACCESS_TOKEN }} ghcr.io
#          docker build -t ghcr.io/jahnavi-vemuri/primes-service:latest --file Dockerfile .
#          docker push ghcr.io/jahnavi-vemuri/primes-service:latest
